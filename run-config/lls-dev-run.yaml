## LLAMA-STACK Distribution Descriptor
version: '2'
image_name: lls-dev-stack

# Enabled APIs
apis:
- agents
- inference
- datasetio
- safety
- files
- telemetry
- tool_runtime
- vector_io

# Provider Configuration
providers:

  # Inference Providers
  inference:
    - provider_id: ollama
      provider_type: remote::ollama
      config:
        url: ${env.INFERENCE_URL:=http://localhost:11434}
        refresh_models: False
    - provider_id: sentence-transformers
      provider_type: inline::sentence-transformers
      config: {}

  # Vector IO Providers
  vector_io:
    - provider_id: inline-milvus
      provider_type: inline::milvus
      config:
        db_path: ${env.MILVUS_DB_PATH:=~/.llama/distributions/lls-dev-stack}/milvus.db
        kvstore:
          type: sqlite
          db_path: ${env.MILVUS_KVSTORE_PATH:=~/.llama/distributions/lls-dev-stack}/milvus_kvstore.db
    - provider_id: inline-faiss
      provider_type: inline::faiss
      config:
        kvstore:
          type: sqlite
          db_path: ${env.FAISS_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/faiss_store.db

  # Safety Providers
  safety:
    - provider_id: llama-guard
      provider_type: inline::llama-guard
      config:
        excluded_categories: []
    - provider_id: code-scanner
      provider_type: inline::code-scanner
#    - provider_id: prompt-guard
#      provider_type: inline::prompt-guard
#      config:
#        guard_type: injection
#
  # Files Backend
  files:
    - provider_type: inline::localfs
      provider_id: llama-localfs
      config:
        storage_dir: ${env.LOCAL_STORAGE_DIR:=~/.llama/distributions/lls-dev-stack}/localfs
        metadata_store:
          type: sqlite
          db_path: ${env.LOCAL_STORAGE_DIR:=~/.llama/distributions/lls-dev-stack/}/localfs/files_metadata.db

  # Agentic Backend Provider
  agents:
    - provider_id: meta-reference
      provider_type: inline::meta-reference
      config:
        persistence_store:
          type: sqlite
          db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/agents_store.db
        responses_store:
          type: sqlite
          db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/responses_store.db

  # Dataset IO Providers
  datasetio:
    - provider_id: huggingface
      provider_type: remote::huggingface
      config:
        kvstore:
          type: sqlite
          db_path: ${emv.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/hf_datasetio.db
    - provider_id: localfs
      provider_type: inline::localfs
      config:
        kvstore:
          type: sqlite
          namespace: null
          db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/localfs_datasetio.db

  telemetry:
    - provider_id: meta-reference
      provider_type: inline::meta-reference
      config:
        service_name: ${env.OTEL_SERVICE_NAME:=llama-stack}
        sinks: ${env.TELEMETRY_SINKS:=console,sqlite}
        otel_trace_endpoint: ${env.OTEL_TRACE_ENDPOINT:}
        sqlite_db_path: ${env.SQLITE_DB_PATH:=~/.llama/distributions/lls-dev-stack/trace_store.db}

  tool_runtime:
    - provider_id: rag-runtime
      provider_type: inline::rag-runtime
      config: {}
    - provider_id: web-search
      provider_type: remote::bing-search
      config: {}
    - provider_id: model-context-protocol
      provider_type: remote::model-context-protocol
      config: {}

metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/registry.db

inference_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/lls-dev-stack}/inference_store.db


## MODELS DEFINITION BY PROVIDER
models: [] # autodiscover models

shields:
  - shield_id: LlamaGuard-3
    provider_id: llama-guard
    provider_shield_id: ${env.SAFETY_MODEL_OLLAMA:=llama-guard3:1b}
  - shield_id: CodeScanner
    provider_id: code-scanner
    provider_shield_id: code-scanner

vector_dbs: []
datasets: []

# TOOLS
tool_groups:
  - toolgroup_id: builtin::rag
    provider_id: rag-runtime
  - toolgroup_id: builtin::websearch
    provider_id: web-search
  - toolgroup_id: mcp::tools
    provider_id: model-context-protocol
    mcp_endpoint:
      uri: "http://localhost:8000/sse"

# ENDPOINT SETTINGS
server:
  host: localhost
  port: 8321
